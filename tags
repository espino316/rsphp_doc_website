!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
App	.\config\app.php	/^class App {$/;"	c
App	.\config\app.php	/^} \/\/ end class App$/;"	c
Controller	.\library\controller.class.php	/^class Controller {$/;"	c
CryptHelper	.\library\crypthelper.class.php	/^class CryptHelper {$/;"	c
DB_HOST	.\config\config.php	/^define('DB_HOST', 'localhost');$/;"	d
DB_NAME	.\config\config.php	/^define('DB_NAME', 'yourdatabasename');$/;"	d
DB_PASSWORD	.\config\config.php	/^define('DB_PASSWORD', 'yourpassword');$/;"	d
DB_USER	.\config\config.php	/^define('DB_USER', 'yourusername');$/;"	d
DEVELOPMENT_ENVIRONMENT	.\config\config.php	/^define('DEVELOPMENT_ENVIRONMENT', true);$/;"	d
DateHelper	.\library\datehelper.class.php	/^class DateHelper {$/;"	c
DateHelper	.\library\datehelper.class.php	/^} \/\/ end class DateHelper$/;"	c
Db	.\config\db.php	/^class Db {$/;"	c
DbConnection	.\library\dbconnection.class.php	/^class DbConnection {$/;"	c
DbHelper	.\library\dbhelper.class.php	/^class DbHelper {$/;"	c
TRIPLEDES_IV	.\config\config.php	/^define( 'TRIPLEDES_IV', hex2bin( '898e711b7ac957cf' ) );$/;"	d
TRIPLEDES_IV	.\config\config.php	/^define('TRIPLEDES_IV', '9e29a18c');$/;"	d
TRIPLEDES_KEY	.\config\config.php	/^define( 'TRIPLEDES_KEY', hex2bin( '79a8c02d79156320c0e231f491067a53f12773f84b386846' ) );$/;"	d
TRIPLEDES_KEY	.\config\config.php	/^define('TRIPLEDES_KEY', 'a6416355e7d15a5ff7be6e4b');$/;"	d
TestLib	.\application\libraries\testlib.php	/^class TestLib {$/;"	c
TestLib	.\application\libraries\testlib.php	/^} \/\/ end class TestLib$/;"	c
__construct	.\library\controller.class.php	/^    function __construct() {$/;"	f
__construct	.\library\dbconnection.class.php	/^	function __construct( $options ) {$/;"	f
__construct	.\library\dbhelper.class.php	/^	function __construct( $dbConnName = NULL ) {$/;"	f
__destruct	.\library\controller.class.php	/^    function __destruct() {$/;"	f
add	.\library\datehelper.class.php	/^	static function add( $date, $interval ) {$/;"	f
add	.\library\datehelper.class.php	/^	} \/\/ end function add$/;"	f
andWhere	.\library\dbhelper.class.php	/^	function andWhere($columnName, $value = NULL) {$/;"	f
andWhere	.\library\dbhelper.class.php	/^	} \/\/ end function andWhere$/;"	f
appName	.\config\app.json	/^	"appName": "Oma Estacionamientos",$/;"	f
binCiphertext	.\library\crypthelper.class.php	/^		$binCiphertext = base64_decode($cipherText);$/;"	v
cachos	.\library\crypthelper.class.php	/^			$cachos= unpack('C*', $frase);$/;"	v
cipher	.\library\crypthelper.class.php	/^		$cipher = mcrypt_module_open(MCRYPT_3DES, '', 'cbc', '');$/;"	v
ciphertext	.\library\crypthelper.class.php	/^		$ciphertext = $iv . $ciphertext;$/;"	v
ciphertext	.\library\crypthelper.class.php	/^		$ciphertext =$/;"	v
ciphertext_base64	.\library\crypthelper.class.php	/^		$ciphertext_base64 = base64_encode($ciphertext);$/;"	v
ciphertext_dec	.\library\crypthelper.class.php	/^		$ciphertext_dec = base64_decode($ciphertext_base64);$/;"	v
ciphertext_dec	.\library\crypthelper.class.php	/^		$ciphertext_dec = substr($ciphertext_dec, $iv_size);$/;"	v
className	.\library\datehelper.class.php	/^			$className = get_class( $date1 );$/;"	v
className	.\library\datehelper.class.php	/^			$className = get_class( $date2 );$/;"	v
clear	.\library\dbhelper.class.php	/^	private function clear() {$/;"	f
colName	.\library\dbhelper.class.php	/^					$sql .= " $colName = :$colName ";$/;"	v
colName	.\library\dbhelper.class.php	/^					$sql .= " AND $colName = :$colName ";$/;"	v
colName	.\library\dbhelper.class.php	/^				$sql .= " $colName = :$colName ";$/;"	v
colName	.\library\dbhelper.class.php	/^				$sql .= " AND $colName = :$colName ";$/;"	v
colName	.\library\dbhelper.class.php	/^				$sql .= ", $colName = :$colName";$/;"	v
configFiles	.\config\app.json	/^	"configFiles": [$/;"	f
conn	.\library\dbhelper.class.php	/^			$this->conn = new PDO($/;"	v
conn	.\library\dbhelper.class.php	/^		$this->conn = null;$/;"	v
conn	.\library\dbhelper.class.php	/^	protected $conn;$/;"	v
connect	.\library\dbhelper.class.php	/^	protected function connect() {$/;"	f
connection	.\config\app.json	/^			"connection": "default",$/;"	f
connections	.\config\db.php	/^	public static $connections;$/;"	v
cont	.\library\dbhelper.class.php	/^					$cont = count($this->whereParams) + 1;$/;"	v
contactEmail	.\config\app.json	/^		"contactEmail": "contacto@emediks.com"$/;"	f
count	.\library\htmlhelper.class.php	/^		$count = count($data);$/;"	v
count	.\library\htmlhelper.class.php	/^		if ( $count == 0 ) {$/;"	v
count	.\rs.php	/^		$count = $db->scalar($sql, $queryParams);$/;"	v
create	.\rs.php	/^\/\/	function create model$/;"	f
crossJoin	.\library\dbhelper.class.php	/^	function crossJoin($tableName) {$/;"	f
crypt	.\library\session.class.php	/^				$crypt = new CryptHelper();$/;"	v
crypt	.\library\session.class.php	/^			$crypt = new CryptHelper();$/;"	v
crypt	.\library\session.class.php	/^		$crypt = new CryptHelper();$/;"	v
cssClass	.\library\htmlhelper.class.php	/^		$cssClass = "btn btn-primary"$/;"	v
ctx	.\library\urihelper.class.php	/^		$ctx = stream_context_create($params);$/;"	v
data	.\library\controller.class.php	/^        $data = array();$/;"	v
data	.\library\htmlhelper.class.php	/^					$data = $db->queryTable($input["list"], $params);$/;"	v
data	.\library\input.class.php	/^	protected static $data;$/;"	v
data	.\library\session.class.php	/^	private static $data;$/;"	v
data	.\library\view.class.php	/^	static function load($viewName, $data = null) {$/;"	v
data	.\library\view.class.php	/^	static function loadToString($viewName, $data = null) {$/;"	v
data	.\library\view.class.php	/^	static function populateTemplate( $template, $data = null ) {$/;"	v
dataSources	.\config\app.json	/^	"dataSources": [$/;"	f
dataTable	.\library\htmlhelper.class.php	/^	static function dataTable ( $data, $options = null, $returnString = false ) {$/;"	f
databaseName	.\config\app.json	/^			"databaseName": "emediks",$/;"	f
databaseName	.\library\dbconnection.class.php	/^		$this->databaseName = $options['databaseName'];$/;"	v
databaseName	.\library\dbconnection.class.php	/^	public $databaseName;$/;"	v
databaseName	.\library\dbhelper.class.php	/^			$databaseName = $this->dbConn->databaseName;$/;"	v
date	.\library\datehelper.class.php	/^		$date = new DateTime( $date );$/;"	v
date1	.\library\datehelper.class.php	/^				$date1 = new DateTime($date1);$/;"	v
date2	.\library\datehelper.class.php	/^				$date2 = new DateTime($date2);$/;"	v
db	.\library\htmlhelper.class.php	/^						$db = new DbHelper($input['dbconn']);$/;"	v
db	.\library\htmlhelper.class.php	/^						$db = new DbHelper();$/;"	v
db	.\library\model.class.php	/^	protected static $db;$/;"	v
db	.\rs.php	/^	$db = new DbHelper();$/;"	v
db	.\rs.php	/^$db = new DbHelper();$/;"	v
dbConn	.\library\dbhelper.class.php	/^			$this->dbConn = DB::$connections[$dbConnName];$/;"	v
dbConn	.\library\dbhelper.class.php	/^			$this->dbConn = DB::$connections['default'];$/;"	v
dbConn	.\library\dbhelper.class.php	/^	protected $dbConn;$/;"	v
dbConnName	.\library\dbhelper.class.php	/^	function __construct( $dbConnName = NULL ) {$/;"	v
dbConnections	.\config\app.json	/^	"dbConnections": [$/;"	f
dbname	.\library\dbhelper.class.php	/^				$dbname = 'Database';$/;"	v
dbname	.\library\dbhelper.class.php	/^			$dbname = 'dbname';$/;"	v
debug	.\library\logger.class.php	/^	static function debug($text) {$/;"	f
debugSql	.\library\logger.class.php	/^	static function debugSql($text) {$/;"	f
defaultController	.\library\shared.php	/^				$defaultController = $route->_newUri;$/;"	v
defaultController	.\library\shared.php	/^  $defaultController = 'default';$/;"	v
delete	.\library\dbhelper.class.php	/^	function delete($tableName, $where) {$/;"	f
demilitarizedControllerName	.\config\app.json	/^		"demilitarizedControllerName": "homecontroller"$/;"	f
descifrar	.\library\crypthelper.class.php	/^	function descifrar($frase) {$/;"	f
diff	.\library\datehelper.class.php	/^	static function diff( $interval, $date1, $date2 ) {$/;"	f
diff	.\library\datehelper.class.php	/^	} \/\/ end function diff$/;"	f
directory	.\public\index.php	/^$directory = str_replace($indexPath, '', $_SERVER['PHP_SELF']);$/;"	v
dispatch	.\library\shared.php	/^    $dispatch = new $controller();$/;"	v
distinctArray	.\library\dbhelper.class.php	/^	function distinctArray($array) {$/;"	f
doCurl	.\library\gmcpusher.class.php	/^	static function doCurl($/;"	f
driver	.\config\app.json	/^			"driver": "pgsql",$/;"	f
driver	.\library\dbconnection.class.php	/^		$this->driver = $options['driver'];$/;"	v
driver	.\library\dbconnection.class.php	/^	public $driver;$/;"	v
driver	.\library\dbhelper.class.php	/^			$driver = $this->dbConn->driver;$/;"	v
driver	.\library\dbhelper.class.php	/^			if ( $driver == 'sqlsrv' ) {$/;"	v
endsWith	.\library\stringhelper.class.php	/^	static function endsWith($haystack, $needle) {$/;"	f
errMsg	.\library\validation.class.php	/^		$errMsg = '';$/;"	v
errorCount	.\library\validation.class.php	/^		$this->errorCount = 0;$/;"	v
errorCount	.\library\validation.class.php	/^	public $errorCount;$/;"	v
errorMsg	.\library\htmlhelper.class.php	/^	static function errorMsg($error_msg, $url_back = '') {$/;"	f
errors	.\library\validation.class.php	/^		$this->errors = array();$/;"	v
errors	.\library\validation.class.php	/^	protected $errors;$/;"	v
example	.\library\gmcpusher.class.php	/^	function example() {$/;"	f
execTry	.\library\controller.class.php	/^    function execTry($functionName, $params) {$/;"	f
exists	.\library\dbhelper.class.php	/^	function exists($tableName = NULL) {$/;"	f
extra	.\library\crypthelper.class.php	/^		$extra = 8 - (strlen($buffer) % 8);$/;"	v
fields	.\library\gmcpusher.class.php	/^		$fields = array$/;"	v
fields	.\library\gmcpusher.class.php	/^		$fields = array($/;"	v
file	.\library\shared.php	/^	$file = ROOT.DS.'config'.DS.'app.json';$/;"	v
file	.\rs.php	/^	$file = 'config\/app.json';$/;"	v
fileName	.\library\logger.class.php	/^			$fileName = ROOT . DS . 'tmp' . DS . 'logs' . DS . 'debug.txt';$/;"	v
filePath	.\library\view.class.php	/^		$filePath = ROOT . DS . 'application' . DS . 'views' . DS . $viewName . '.php';$/;"	v
filename	.\library\logger.class.php	/^			$filename = ROOT . DS . 'tmp' . DS . 'logs' . DS . 'debug.txt';$/;"	v
filename	.\library\logger.class.php	/^			$filename = ROOT . DS . 'tmp' . DS . 'logs' . DS . 'debugSql.txt';$/;"	v
filename	.\library\logger.class.php	/^		$filename = ROOT . DS . 'tmp' . DS . 'logs' . DS . 'debug.txt';$/;"	v
filename	.\library\logger.class.php	/^		$filename = ROOT . DS . 'tmp' . DS . 'logs' . DS . 'debugSql.txt';$/;"	v
filename	.\rs.php	/^	$filename = "application\/models\/" . strtolower($tableName) . "model.php";$/;"	v
first	.\library\dbhelper.class.php	/^	function first($tableName = NULL, $className = NULL) {$/;"	f
first	.\library\model.class.php	/^	static function first() {$/;"	f
first	.\library\model.class.php	/^	} \/\/ end function first$/;"	f
formHidden	.\library\htmlhelper.class.php	/^	static function formHidden($/;"	f
formSelect	.\library\htmlhelper.class.php	/^	static function formSelect($/;"	f
formSubmit	.\library\htmlhelper.class.php	/^	static function formSubmit($/;"	f
formSubmit	.\library\htmlhelper.class.php	/^	} \/\/ end function formSubmit$/;"	f
fp	.\library\urihelper.class.php	/^		$fp = @fopen($url, 'rb', false, $ctx);$/;"	v
frase	.\library\crypthelper.class.php	/^			$frase = base64_decode($frase);$/;"	v
from	.\library\dbhelper.class.php	/^			$this->from = $tableName;$/;"	v
from	.\library\dbhelper.class.php	/^		$this->from = $tableName;$/;"	v
from	.\library\dbhelper.class.php	/^		$this->from = null;$/;"	v
from	.\library\dbhelper.class.php	/^	function from($tableName) {$/;"	f
from	.\library\dbhelper.class.php	/^	protected $from;$/;"	v
from	.\library\mailer.class.php	/^	static $from;$/;"	v
geofence	.\rs.php	/^			$geofence = array();$/;"	v
geofence	.\rs.php	/^	$geofence = null;$/;"	v
geofences	.\rs.php	/^	$geofences = null;$/;"	v
get	.\config\app.php	/^	public static function get($name) {$/;"	f
get	.\config\app.php	/^	} \/\/ end function get$/;"	f
get	.\library\dbhelper.class.php	/^	function get($tableName = NULL, $className = NULL) {$/;"	f
get	.\library\input.class.php	/^	static function get($key = NULL) {$/;"	f
get	.\library\model.class.php	/^	static function get() {$/;"	f
get	.\library\model.class.php	/^	} \/\/ end function get$/;"	f
get	.\library\session.class.php	/^	static function get($itemKey = null) {$/;"	f
get	.\library\view.class.php	/^	static function get($key) {$/;"	f
getCheckBoxGroup	.\library\htmlhelper.class.php	/^	static function getCheckBoxGroup($/;"	f
getErrors	.\library\validation.class.php	/^	function getErrors() {$/;"	f
getHeader	.\library\input.class.php	/^	static function getHeader($key) {$/;"	f
getHeadersCount	.\library\input.class.php	/^	static function getHeadersCount() {$/;"	f
getHeadersKeys	.\library\input.class.php	/^	static function getHeadersKeys() {$/;"	f
getIdentityColumn	.\library\dbhelper.class.php	/^	function getIdentityColumn( $tableName ) {$/;"	f
getIdentityColumn	.\library\dbhelper.class.php	/^	} \/\/ end function getIdentityColumn$/;"	f
getInsertStatement	.\library\dbhelper.class.php	/^	function getInsertStatement( $tableName, $params ) {$/;"	f
getLastId	.\library\dbhelper.class.php	/^	function getLastId($tableName, $idColName, $where) {$/;"	f
getMethod	.\library\input.class.php	/^	static function getMethod() {$/;"	f
getMethod	.\library\input.class.php	/^	} \/\/ end function getMethod$/;"	f
getPrimaryKeys	.\library\dbhelper.class.php	/^	function getPrimaryKeys( $tableName ) {$/;"	f
getPrimaryKeys	.\library\dbhelper.class.php	/^	} \/\/ end function getPrimaryKeys$/;"	f
getProperties	.\library\model.class.php	/^	public function getProperties() {$/;"	f
getProperties	.\rs.php	/^} \/\/ end function getProperties$/;"	f
getPropertiesFromInput	.\library\model.class.php	/^	function getPropertiesFromInput() {$/;"	f
getPropertiesFromInput	.\library\model.class.php	/^	} \/\/ end function getPropertiesFromInput$/;"	f
getPublicProperties	.\rs.php	/^function getPublicProperties( $tableName ) {$/;"	f
getScalar	.\library\dbhelper.class.php	/^	function getScalar($tableName = NULL) {$/;"	f
getSegment	.\library\urihelper.class.php	/^	static function getSegment( $index ) {$/;"	f
getSegment	.\library\urihelper.class.php	/^	} \/\/ end function getSegment$/;"	f
getSegmentsLength	.\library\urihelper.class.php	/^	static function getSegmentsLength () {$/;"	f
getSegmentsLength	.\library\urihelper.class.php	/^	} \/\/ end function getSegmentsLength$/;"	f
getSubBusinessLinesHTMLCheckBoxGrop	.\library\htmlhelper.class.php	/^	} \/\/ end function getSubBusinessLinesHTMLCheckBoxGrop$/;"	f
getTableInputs	.\library\htmlhelper.class.php	/^	static function getTableInputs($tableId) {$/;"	f
getTableName	.\library\model.class.php	/^	function getTableName() {$/;"	f
getUrl	.\library\route.class.php	/^	} \/\/ end function getUrl$/;"	f
globals	.\config\app.json	/^	"globals": {$/;"	f
handleException	.\library\controller.class.php	/^    function handleException( $ex ) {$/;"	f
head	.\library\htmlhelper.class.php	/^		$head = $data[0];$/;"	v
headers	.\library\gmcpusher.class.php	/^		$headers = array$/;"	v
headers	.\library\gmcpusher.class.php	/^		$headers = array($/;"	v
headers	.\library\input.class.php	/^	protected static $headers;$/;"	v
headers	.\library\mailer.class.php	/^			$headers = "From: " . self::$from . "\\r\\n" .$/;"	v
headers	.\library\mailer.class.php	/^			$headers = "From: " . self::$from . "\\r\\n";$/;"	v
headers	.\library\urihelper.class.php	/^	static function redirectPost($url, array $data, array $headers = null) {$/;"	v
hidden	.\library\htmlhelper.class.php	/^		$hidden = "<input type=\\"hidden\\" id=\\"$name\\" name=\\"$name\\" value='$value'>";$/;"	v
hiddenEscapeTextArea	.\public\js\realsimple.js	/^var hiddenEscapeTextArea = document.createElement('textarea');$/;"	v
hola	.\application\libraries\testlib.php	/^  function hola() {$/;"	f
hola	.\public\js\app\config.json	/^    "hola": "example.hola",$/;"	f
host	.\library\dbhelper.class.php	/^				$host = 'Server';$/;"	v
host	.\library\dbhelper.class.php	/^			$host = 'host';$/;"	v
hostName	.\config\app.json	/^			"hostName": "127.0.0.1",$/;"	f
hostName	.\library\dbconnection.class.php	/^		$this->hostName = $options['hostName'];$/;"	v
hostName	.\library\dbconnection.class.php	/^	public $hostName;$/;"	v
hostName	.\library\dbhelper.class.php	/^					$hostName = $hostName . ':' . $this->dbConn->port;$/;"	v
hostName	.\library\dbhelper.class.php	/^			$hostName = $this->dbConn->hostName;$/;"	v
html	.\library\htmlhelper.class.php	/^		$html = "<fieldset><legend>$legend<\/legend>";$/;"	v
html	.\library\htmlhelper.class.php	/^		$html = '<div>';$/;"	v
html	.\library\mailer.class.php	/^	static $html = false;$/;"	v
hyphen	.\library\stringhelper.class.php	/^			$hyphen = chr(45);\/\/ "-"$/;"	v
id	.\rs.php	/^		$id = $result[0]['column_name'];$/;"	v
id	.\rs.php	/^	$id = $db->getIdentityColumn( $tableName );$/;"	v
indexPath	.\public\index.php	/^$indexPath = '\/public\/index.php';$/;"	v
info	.\library\gmcpusher.class.php	/^		$info = null,$/;"	v
inputData	.\public\index.php	/^$inputData = array();$/;"	v
inputKey	.\library\model.class.php	/^				if ( $inputKey == $propertyKey ) {$/;"	v
inputString	.\library\input.class.php	/^		$inputString = file_get_contents("php:\/\/input", "r");$/;"	v
inputString	.\public\index.php	/^$inputString = file_get_contents("php:\/\/input", "r");$/;"	v
inputs	.\library\htmlhelper.class.php	/^		$inputs = $inputs["inputs"];$/;"	v
inputs	.\library\htmlhelper.class.php	/^		$inputs = Input::get();$/;"	v
inputs	.\library\htmlhelper.class.php	/^		$inputs = json_decode($json, true);$/;"	v
inputs	.\library\model.class.php	/^		$inputs = Input::get();$/;"	v
inputsRows	.\library\htmlhelper.class.php	/^		$inputsRows = array();$/;"	v
insert	.\library\dbhelper.class.php	/^	function insert( $tableName, $params ) {$/;"	f
insertSql	.\rs.php	/^	$insertSql = 'INSERT INTO ' . $tableName . ' VALUES (nextval(\\'geofences_geofence_id_seq\\'::regclass), @businessId, \\'@geofenceName\\', st_geomfromtext(\\'POLYGON((@coordinates))\\')::polygon)';$/;"	v
is	.\library\datehelper.class.php	/^			} \/\/ end if class is DateTime$/;"	c
isInit	.\library\dbhelper.class.php	/^					$isInit = FALSE;$/;"	v
isInit	.\library\dbhelper.class.php	/^				$isInit = FALSE;$/;"	v
isInit	.\library\dbhelper.class.php	/^				$isInit = false;$/;"	v
isInit	.\library\dbhelper.class.php	/^			$isInit = TRUE;$/;"	v
isInit	.\library\dbhelper.class.php	/^		$isInit = TRUE;$/;"	v
isInit	.\library\dbhelper.class.php	/^		$isInit = true;$/;"	v
isMessageAllowed	.\library\controller.class.php	/^    function isMessageAllowed($bool = false) {$/;"	f
itemKey	.\library\session.class.php	/^		if ( $itemKey == null ) {$/;"	v
iv	.\library\crypthelper.class.php	/^		$iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);$/;"	v
iv_dec	.\library\crypthelper.class.php	/^		$iv_dec = substr($ciphertext_dec, 0, $iv_size);$/;"	v
iv_size	.\library\crypthelper.class.php	/^		$iv_size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_CBC);$/;"	v
join	.\library\dbhelper.class.php	/^	function join($tableName, $leftField, $operator, $rightField) {$/;"	f
joinStatement	.\library\dbhelper.class.php	/^			$this->joinStatement = " JOIN $tableName ON $leftField $operator $rightField ";$/;"	v
joinStatement	.\library\dbhelper.class.php	/^			$this->joinStatement = " LEFT JOIN $tableName ";$/;"	v
joinStatement	.\library\dbhelper.class.php	/^			$this->joinStatement = " LEFT JOIN $tableName ON $leftField $operator $rightField ";$/;"	v
joinStatement	.\library\dbhelper.class.php	/^			$this->joinStatement = " RIGHT JOIN $tableName ON $leftField $operator $rightField ";$/;"	v
joinStatement	.\library\dbhelper.class.php	/^		$this->joinStatement = null;$/;"	v
joinStatement	.\library\dbhelper.class.php	/^	protected $joinStatement;$/;"	v
jsonResponse	.\library\controller.class.php	/^    function jsonResponse( $data ) {$/;"	f
jsonToHtmlForm	.\library\htmlhelper.class.php	/^	static function jsonToHtmlForm($json, $returnString = false) {$/;"	f
k	.\library\urihelper.class.php	/^			foreach ($headers as $k => $v) {$/;"	v
key	.\library\crypthelper.class.php	/^		$key = get_key();$/;"	v
key	.\library\crypthelper.class.php	/^		$key = pack('H*', RJN_KEY);$/;"	v
key	.\library\htmlhelper.class.php	/^						$key = $column["name"];$/;"	v
key	.\library\htmlhelper.class.php	/^			$result.= " $key=\\"$value\\" ";$/;"	v
key	.\library\htmlhelper.class.php	/^		foreach ($array as $key => $value) {$/;"	v
key	.\library\input.class.php	/^		if ( $key == NULL ) {$/;"	v
key	.\library\route.class.php	/^				foreach ( $segments as $key => $value ) {$/;"	v
key	.\library\route.class.php	/^			foreach ($segments as $key => $value) {$/;"	v
key	.\library\shared.php	/^            foreach ($GLOBALS[$value] as $key => $var) {$/;"	v
key	.\library\view.class.php	/^        foreach ($array as $key => $value) {$/;"	v
key	.\library\xmlhelper.class.php	/^        $key = 'item'.$key; \/\/dealing with <0\/>..<n\/> issues$/;"	v
key	.\library\xmlhelper.class.php	/^  foreach( $data as $key => $value ) {$/;"	v
keyValue	.\library\input.class.php	/^			$keyValue = explode('=', $pair);$/;"	v
keys	.\library\htmlhelper.class.php	/^						$keys = array_keys($row);$/;"	v
l	.\library\stringhelper.class.php	/^	static function chunk_split_unicode($str, $l = 76, $e = "\\r\\n") {$/;"	v
laclave	.\library\crypthelper.class.php	/^			$laclave = unpack('C*', LLAVE_CIFRADO);$/;"	v
largo	.\library\crypthelper.class.php	/^			$largo = strlen(LLAVE_CIFRADO);$/;"	v
left	.\library\stringhelper.class.php	/^	static function left($str, $length) {$/;"	f
leftJoin	.\library\dbhelper.class.php	/^	function leftJoin($tableName, $leftField, $operator, $rightField) {$/;"	f
like	.\library\dbhelper.class.php	/^	function like($columnName, $value) {$/;"	f
limitStatement	.\library\dbhelper.class.php	/^					$this->limitStatement = " TOP ($limit) ";$/;"	v
limitStatement	.\library\dbhelper.class.php	/^					$this->limitStatement = " offset $startAt";$/;"	v
limitStatement	.\library\dbhelper.class.php	/^					$this->limitStatement = ", $startAt";$/;"	v
limitStatement	.\library\dbhelper.class.php	/^				$this->limitStatement = " LIMIT $limit ";$/;"	v
limitStatement	.\library\dbhelper.class.php	/^				$this->limitStatement = " TOP ($limit) ";$/;"	v
limitStatement	.\library\dbhelper.class.php	/^			$this->limitStatement = " LIMIT $limit";$/;"	v
limitStatement	.\library\dbhelper.class.php	/^		$this->limitStatement = null;$/;"	v
limitStatement	.\library\dbhelper.class.php	/^	protected $limitStatement;$/;"	v
limitType	.\library\dbhelper.class.php	/^					$this->limitType = 2;$/;"	v
limitType	.\library\dbhelper.class.php	/^				$this->limitType = 1;$/;"	v
limitType	.\library\dbhelper.class.php	/^				$this->limitType = 2;$/;"	v
limitType	.\library\dbhelper.class.php	/^		if ( $this->limitType == 1 )$/;"	v
limitType	.\library\dbhelper.class.php	/^		if ( $this->limitType == 2 )$/;"	v
limitType	.\library\dbhelper.class.php	/^	protected $limitType;$/;"	v
link_back	.\library\htmlhelper.class.php	/^			$link_back = anchor($url_back, 'Regresar');$/;"	v
load	.\library\input.class.php	/^	static function load(){$/;"	f
load	.\library\session.class.php	/^	private static function load(){$/;"	f
load	.\library\view.class.php	/^	static function load($viewName, $data = null) {$/;"	f
load	.\rs.php	/^	function load($@id) {$/;"	f
load	.\rs.php	/^	} \/\/ end function load$/;"	f
loadAppConfig	.\library\shared.php	/^function loadAppConfig() {$/;"	f
loadAppConfig	.\rs.php	/^function loadAppConfig() {$/;"	f
loadProperties	.\rs.php	/^	$loadProperties = "";$/;"	v
loadToString	.\library\view.class.php	/^	static function loadToString($viewName, $data = null) {$/;"	f
match	.\library\route.class.php	/^	function match( $url ) {$/;"	f
max	.\library\dbhelper.class.php	/^	function max($colName, $tableName = NULL) {$/;"	f
maxlenght	.\library\htmlhelper.class.php	/^						$maxlenght = $input['maxlength'];$/;"	v
message	.\library\mailer.class.php	/^	static $message;$/;"	v
messages	.\library\validation.class.php	/^	protected $messages;$/;"	v
method	.\config\app.json	/^			"method": "*",$/;"	f
method	.\library\input.class.php	/^	protected static $method;$/;"	v
method	.\library\shared.php	/^	if ( $method == 'GET' ) {$/;"	v
method	.\public\index.php	/^$method = $_SERVER['REQUEST_METHOD'];$/;"	v
model	.\library\shared.php	/^ 	$model = '';$/;"	v
msg	.\library\gmcpusher.class.php	/^		$msg = array$/;"	v
msg	.\library\htmlhelper.class.php	/^			$msg = str_replace('{link_back}', $link_back, $msg);$/;"	v
msg	.\library\htmlhelper.class.php	/^			$msg = str_replace('{link_back}', '', $msg);$/;"	v
msg	.\library\htmlhelper.class.php	/^		$msg = '<html>$/;"	v
msg	.\library\htmlhelper.class.php	/^		$msg = str_replace('{error_msg}', $error_msg, $msg);$/;"	v
myGlobalVar	.\config\app.json	/^		"myGlobalVar": "myValue",$/;"	f
name	.\config\app.json	/^					"name": "paramNane",$/;"	f
name	.\config\app.json	/^			"name": "default",$/;"	f
name	.\library\htmlhelper.class.php	/^								$name = $tableId."__".$key."__select__".$cont;$/;"	v
name	.\library\model.class.php	/^	 * Returns the table name of the class, assumes stripping Model from class name by default$/;"	c
needle	.\library\stringhelper.class.php	/^		return $needle === "" || (($temp = strlen($haystack) - strlen($needle)) >= 0 && strpos($haystack, $needle, $temp) !== FALSE);$/;"	v
needle	.\library\stringhelper.class.php	/^		return $needle === "" || strrpos($haystack, $needle, -strlen($haystack)) !== FALSE;$/;"	v
new	.\library\dbhelper.class.php	/^		$new = array();$/;"	v
newCoordinates	.\rs.php	/^			$newCoordinates = null;$/;"	v
newSegments	.\library\route.class.php	/^			$newSegments = array_filter( $newSegments );$/;"	v
newSegments	.\library\route.class.php	/^			$newSegments = explode( "\/", $this->_newUri );$/;"	v
newUrl	.\config\app.json	/^			"newUrl": "home"$/;"	f
newUrl	.\config\app.json	/^			"newUrl": "home\/privacypolicy"$/;"	f
nonQuery	.\library\dbhelper.class.php	/^	function nonQuery($sql, $queryParams) {$/;"	f
now	.\library\datehelper.class.php	/^	static function now() {$/;"	f
object	.\library\view.class.php	/^        $object = new stdClass();$/;"	v
onChange	.\library\htmlhelper.class.php	/^			$onChange = "onchange=\\"$onChange\\"";$/;"	v
onChange	.\library\htmlhelper.class.php	/^			$onChange = '';$/;"	v
onChange	.\library\htmlhelper.class.php	/^		$onChange = ''$/;"	v
onInvalidRedirectUrl	.\config\app.json	/^		"onInvalidRedirectUrl": "",$/;"	f
onclick_fields_row	.\library\htmlhelper.class.php	/^				$onclick_fields_row = $options['onclick_fields'];$/;"	v
onclick_format	.\library\htmlhelper.class.php	/^											$onclick_format = str_replace( "@$field", $row[$field], $onclick_format);$/;"	v
onclick_format	.\library\htmlhelper.class.php	/^									$onclick_format = ' onclick="' . $column['onclick_format'] . '" ';$/;"	v
onclick_format	.\library\htmlhelper.class.php	/^								$onclick_format = "";$/;"	v
onclick_format_row	.\library\htmlhelper.class.php	/^				$onclick_format_row = $options['onclick_format'];$/;"	v
onclick_row	.\library\htmlhelper.class.php	/^							$onclick_row = str_replace( "@$field", $row[$field], $onclick_row);$/;"	v
onclick_row	.\library\htmlhelper.class.php	/^					$onclick_row = $onclick_format_row;$/;"	v
options	.\library\htmlhelper.class.php	/^	static function dataTable ( $data, $options = null, $returnString = false ) {$/;"	v
options	.\public\js\app\config.json	/^  "options": {$/;"	f
orLike	.\library\dbhelper.class.php	/^	function orLike($columnName, $value) {$/;"	f
orWhere	.\library\dbhelper.class.php	/^	function orWhere($columnName, $value) {$/;"	f
orWhere	.\library\dbhelper.class.php	/^	} \/\/ end function orWhere$/;"	f
orWhere	.\library\model.class.php	/^	static function orWhere($columnName, $value) {$/;"	f
orWhere	.\library\model.class.php	/^	} \/\/ end static function orWhere$/;"	f
orderBy	.\library\dbhelper.class.php	/^	function orderBy($column, $ascDesc = NULL) {$/;"	f
orderBy	.\library\model.class.php	/^	static function orderBy($column, $ascDesc = NULL) {$/;"	f
orderBy	.\library\model.class.php	/^	} \/\/ end static function orderBy$/;"	f
orderByStatement	.\library\dbhelper.class.php	/^			$this->orderByStatement = $column . ($ascDesc != NULL ? " $ascDesc" : "");$/;"	v
orderByStatement	.\library\dbhelper.class.php	/^		$this->orderByStatement = null;$/;"	v
orderByStatement	.\library\dbhelper.class.php	/^	protected $orderByStatement;$/;"	v
output	.\library\controller.class.php	/^      $output = ob_get_contents();$/;"	v
output	.\library\urihelper.class.php	/^		$output = ob_get_contents();$/;"	v
p	.\rs.php	/^	$p = xml_parser_create();$/;"	v
pairs	.\library\input.class.php	/^		$pairs = explode('&', $queryString);$/;"	v
paragraph	.\library\htmlhelper.class.php	/^	static function paragraph( $text, $attributes ) {$/;"	f
paragraph	.\library\htmlhelper.class.php	/^	} \/\/ end function paragraph$/;"	f
paramName	.\library\dbhelper.class.php	/^					$paramName = str_replace(".", "_", $colName) . $cont;$/;"	v
paramName	.\library\dbhelper.class.php	/^			$paramName = str_replace(".", "_", $columnName) . $cont;$/;"	v
paramName	.\library\dbhelper.class.php	/^		$paramName = str_replace(".", "_", $columnName) . $cont;$/;"	v
params	.\config\app.json	/^			"params": [$/;"	f
params	.\library\htmlhelper.class.php	/^					$params = NULL;$/;"	v
params	.\library\urihelper.class.php	/^		$params = array($/;"	v
params	.\rs.php	/^		$params = array($/;"	v
parseJson	.\library\input.class.php	/^	static function parseJson($string, &$result) {$/;"	f
parseJson	.\library\input.class.php	/^	} \/\/ end function parseJson$/;"	f
password	.\config\app.json	/^			"password": "Sp1n4l01"$/;"	f
password	.\library\dbconnection.class.php	/^		$this->password = $options['password'];$/;"	v
password	.\library\dbconnection.class.php	/^	public $password;$/;"	v
password	.\library\dbhelper.class.php	/^			$password = $this->dbConn->password;$/;"	v
pattern	.\library\route.class.php	/^			$pattern = "";$/;"	v
pattern	.\library\route.class.php	/^			$pattern="\/".$pattern."\/";$/;"	v
patterns	.\library\route.class.php	/^				$patterns = array();$/;"	v
plaintext_dec	.\library\crypthelper.class.php	/^		$plaintext_dec =$/;"	v
populateTemplate	.\library\view.class.php	/^	static function populateTemplate( $template, $data = null ) {$/;"	f
populateTemplate	.\library\view.class.php	/^	} \/\/ end static function populateTemplate$/;"	f
port	.\library\dbconnection.class.php	/^			$this->port = $options['port'];$/;"	v
port	.\library\dbconnection.class.php	/^	public $port;$/;"	v
printLine	.\rs.php	/^function printLine($text) {$/;"	f
printLn	.\library\htmlhelper.class.php	/^	static function printLn ($/;"	f
prints	.\library\view.class.php	/^	 * This function prints the populated template to reponse$/;"	f
private_key	.\library\crypthelper.class.php	/^		\/\/ $private_key = openssl_pkey_get_private('file:\/\/private_key.pem');		$/;"	v
properties	.\library\model.class.php	/^		$properties = get_object_vars($this);$/;"	v
properties	.\library\view.class.php	/^						$properties = get_object_vars($data[$itemKey]);$/;"	v
properties	.\library\view.class.php	/^					$properties = get_object_vars($data[$itemKey]);$/;"	v
protocol	.\public\index.php	/^$protocol = stripos($_SERVER['SERVER_PROTOCOL'],'https') === true ? 'https:\/\/' : 'http:\/\/';$/;"	v
publicProperties	.\rs.php	/^	$publicProperties = '';$/;"	v
publicProperties	.\rs.php	/^	$publicProperties = getPublicProperties( $tableName );$/;"	v
query	.\config\app.json	/^			"query": "SELECT * FROM myTable;",$/;"	f
query	.\library\dbhelper.class.php	/^	function query($sql, $queryParams = NULL, $className = NULL) {$/;"	f
queryParams	.\library\dbhelper.class.php	/^			$queryParams = $this->whereParams;$/;"	v
queryParams	.\library\dbhelper.class.php	/^		$queryParams = NULL;$/;"	v
queryParams	.\library\dbhelper.class.php	/^	function query($sql, $queryParams = NULL, $className = NULL) {$/;"	v
queryParams	.\library\dbhelper.class.php	/^	function queryTable($tableName, $queryParams = NULL, $className = NULL) {$/;"	v
queryString	.\library\shared.php	/^ 	$queryString = array();$/;"	v
queryString	.\library\shared.php	/^    		$queryString = $urlArray;$/;"	v
queryTable	.\library\dbhelper.class.php	/^	function queryTable($tableName, $queryParams = NULL, $className = NULL) {$/;"	f
queryType	.\config\app.json	/^			"queryType": "sqlquery",$/;"	f
redirect	.\library\urihelper.class.php	/^	static function redirect($url, $statusCode = 303)$/;"	f
redirectPost	.\library\urihelper.class.php	/^	static function redirectPost($url, array $data, array $headers = null) {$/;"	f
redirectPost	.\library\urihelper.class.php	/^	} \/\/ end function redirectPost$/;"	f
registrationIds	.\library\gmcpusher.class.php	/^		$registrationIds = array( $_GET['id'] );$/;"	v
removeMagicQuotes	.\library\shared.php	/^function removeMagicQuotes() {$/;"	f
removeMagicQuotes	.\library\shared.php	/^} \/\/ end function removeMagicQuotes$/;"	f
replace	.\library\stringhelper.class.php	/^		$replace = array($/;"	v
replaceFirst	.\library\stringhelper.class.php	/^	function replaceFirst($search, $replace, $string)$/;"	f
replaceFirst	.\library\stringhelper.class.php	/^	} \/\/ end function replaceFirst$/;"	f
replacements	.\library\route.class.php	/^				$replacements = array();$/;"	v
requireToVar	.\library\view.class.php	/^	private static function requireToVar($file){$/;"	f
requireToVar	.\library\view.class.php	/^	} \/\/ end function requireToVar$/;"	f
restApiEndpoint	.\public\js\app\config.json	/^    "restApiEndpoint": "http:\/\/localhost\/rsjs\/rest.php?resource="$/;"	f
result	.\library\crypthelper.class.php	/^		$result = bin2hex(mcrypt_generic($cipher, $buffer));$/;"	v
result	.\library\crypthelper.class.php	/^		$result = rtrim(mdecrypt_generic($cipher, hex2bin($buffer)), "\\0");$/;"	v
result	.\library\datehelper.class.php	/^				$result = $result \/ 60 \/ 60 \/ 24 \/ 30.4375; \/\/ month$/;"	v
result	.\library\datehelper.class.php	/^				$result = $result \/ 60 \/ 60 \/ 24 \/ 365.25; \/\/ years$/;"	v
result	.\library\datehelper.class.php	/^				$result = $result \/ 60 \/ 60 \/ 24; \/\/ days$/;"	v
result	.\library\datehelper.class.php	/^				$result = $result \/ 60 \/ 60; \/\/ hours$/;"	v
result	.\library\datehelper.class.php	/^				$result = $result \/ 60; \/\/ minutes$/;"	v
result	.\library\datehelper.class.php	/^				$result = $result; \/\/ seconds$/;"	v
result	.\library\datehelper.class.php	/^		$result = $time1 - $time2;$/;"	v
result	.\library\dbhelper.class.php	/^					$result = array();$/;"	v
result	.\library\dbhelper.class.php	/^			$result = $statement->fetchColumn();$/;"	v
result	.\library\dbhelper.class.php	/^			if ( $result == 0 ) {$/;"	v
result	.\library\dbhelper.class.php	/^		$result = $statement->fetchColumn();$/;"	v
result	.\library\dbhelper.class.php	/^		$result = $this->get($tableName, $className);$/;"	v
result	.\library\dbhelper.class.php	/^		$result = array();$/;"	v
result	.\library\dbhelper.class.php	/^ 		$result = $db->query($sql, $queryParams);$/;"	v
result	.\library\dbhelper.class.php	/^ 		$result = $db->scalar($sql, $queryParams);$/;"	v
result	.\library\gmcpusher.class.php	/^		$result = curl_exec($ch );$/;"	v
result	.\library\gmcpusher.class.php	/^		$result = json_decode( $result, true );$/;"	v
result	.\library\htmlhelper.class.php	/^		$result = "";$/;"	v
result	.\library\htmlhelper.class.php	/^		$result = "<p " . self::arrayToString( $attributes ) .">";$/;"	v
result	.\library\input.class.php	/^ 		$result = json_decode($string, true);$/;"	v
result	.\library\xmlhelper.class.php	/^    $result = $xml_data->asXML();$/;"	v
result	.\rs.php	/^		$result =$/;"	v
result	.\rs.php	/^	$result = $db->query($sql, $queryParams);$/;"	v
result	.\rs.php	/^ 		$result = $db->getPrimaryKeys($tableName);$/;"	v
resultSetFilter	.\library\dbhelper.class.php	/^	static function resultSetFilter( $resultSet, $itemKey, $itemValue ) {$/;"	f
resultSetFilter	.\library\dbhelper.class.php	/^	} \/\/ end function resultSetFilter$/;"	f
resultset	.\library\dbhelper.class.php	/^				$resultset = $statement->fetchAll(PDO::FETCH_CLASS, $this->returnClassName);$/;"	v
resultset	.\library\dbhelper.class.php	/^				$resultset = array();$/;"	v
resultset	.\library\dbhelper.class.php	/^			$resultset = $statement->fetchAll(PDO::FETCH_CLASS, $className);$/;"	v
returnClassName	.\library\dbhelper.class.php	/^		$this->returnClassName = $returnClassName;$/;"	v
returnClassName	.\library\dbhelper.class.php	/^	protected $returnClassName;$/;"	v
returnString	.\library\htmlhelper.class.php	/^			$returnString = FALSE$/;"	v
returnString	.\library\htmlhelper.class.php	/^		$returnString = false,$/;"	v
returnString	.\library\htmlhelper.class.php	/^	static function jsonToHtmlForm($json, $returnString = false) {$/;"	v
returns	.\library\view.class.php	/^	 * This function returns the populated template as string$/;"	f
right	.\library\stringhelper.class.php	/^	static function right($str, $length) {$/;"	f
rightJoin	.\library\dbhelper.class.php	/^	function rightJoin($tableName, $leftField, $operator, $rightField) {$/;"	f
rjnDecrypt	.\library\crypthelper.class.php	/^	function rjnDecrypt ( $ciphertext_base64 ) {$/;"	f
rjnEncrypt	.\library\crypthelper.class.php	/^	function rjnEncrypt( $plaintext ) {$/;"	f
routes	.\config\app.json	/^	"routes": [$/;"	f
routes	.\library\shared.php	/^	$routes = App::get('routes');$/;"	v
routes	.\public\js\app\config.json	/^  "routes": {$/;"	f
row	.\library\htmlhelper.class.php	/^						$row = $data[0];$/;"	v
rowCount	.\library\htmlhelper.class.php	/^		$rowCount = 0;$/;"	v
rsaDecrypt	.\library\crypthelper.class.php	/^	function rsaDecrypt($cipherText) {$/;"	f
rsaPrivateKey	.\library\crypthelper.class.php	/^		$rsaPrivateKey = openssl_pkey_get_private(RSA_PRIVATE_KEY);$/;"	v
rules	.\library\validation.class.php	/^		$this->rules = array();	$/;"	v
rules	.\library\validation.class.php	/^	protected $rules;$/;"	v
save	.\rs.php	/^	function save($forceInsert = FALSE) {$/;"	f
save	.\rs.php	/^	} \/\/ end function save$/;"	f
saveProperties	.\rs.php	/^	$saveProperties = "";$/;"	v
scalar	.\library\dbhelper.class.php	/^	function scalar($sql, $queryParams) {$/;"	f
search	.\library\stringhelper.class.php	/^		$search = array($/;"	v
search	.\library\stringhelper.class.php	/^    $search = '\/'.preg_quote($search, '\/').'\/';$/;"	v
segments	.\library\route.class.php	/^			$segments = array_filter( $segments );$/;"	v
segments	.\library\route.class.php	/^			$segments = explode( "\/", $this->_uri );$/;"	v
segments	.\library\urihelper.class.php	/^	protected static $segments;$/;"	v
select	.\library\dbhelper.class.php	/^	function select($column) {$/;"	f
select	.\library\htmlhelper.class.php	/^								$select =$/;"	v
select	.\library\htmlhelper.class.php	/^		$select = "<select id=\\"$name\\" name=\\"$name\\" class=\\"form-control\\" $onChange >";$/;"	v
selectStatement	.\library\dbhelper.class.php	/^			$this->selectStatement = " * ";$/;"	v
selectStatement	.\library\dbhelper.class.php	/^			$this->selectStatement = $column;$/;"	v
selectStatement	.\library\dbhelper.class.php	/^		$this->selectStatement = null;$/;"	v
selectStatement	.\library\dbhelper.class.php	/^	protected $selectStatement;$/;"	v
selected	.\library\htmlhelper.class.php	/^				$selected = "selected";$/;"	v
selected	.\library\htmlhelper.class.php	/^			$selected = "";$/;"	v
selected_value	.\library\htmlhelper.class.php	/^			if ( $selected_value == $row[$value_field] )$/;"	v
selected_value	.\library\htmlhelper.class.php	/^		$selected_value = '',$/;"	v
send	.\library\gmcpusher.class.php	/^	static function send($/;"	f
send	.\library\gmcpusher.class.php	/^	} \/\/ end function send$/;"	f
send	.\library\mailer.class.php	/^	static function send() {$/;"	f
send	.\library\mailer.class.php	/^	} \/\/ end function send$/;"	f
sendWeb	.\library\gmcpusher.class.php	/^	public static function sendWeb ( $id ) {$/;"	f
sendWeb	.\library\gmcpusher.class.php	/^	} \/\/ end function sendWeb$/;"	f
sessionParameter	.\config\app.json	/^		"sessionParameter": "playerId",$/;"	f
sessionParameter	.\library\session.class.php	/^				$sessionParameter = $sessionValidation["sessionParameter"];$/;"	v
sessionValidation	.\config\app.json	/^	"sessionValidation": {$/;"	f
sessionValidation	.\library\session.class.php	/^			$sessionValidation = App::get("sessionValidation");$/;"	v
set	.\config\app.php	/^	public static function set($name, $value = null) {$/;"	f
set	.\config\app.php	/^	} \/\/ end function set$/;"	f
set	.\library\session.class.php	/^	static function set($itemKey, $itemValue) {$/;"	f
set	.\library\view.class.php	/^	static function set($key, $value) {$/;"	f
setDB	.\library\model.class.php	/^	protected static function setDB() {$/;"	f
setDB	.\library\model.class.php	/^	} \/\/ end protected static function setDB$/;"	f
setJSLog	.\library\htmlhelper.class.php	/^	static function setJSLog($msg) {$/;"	f
setQueryString	.\library\input.class.php	/^	static function setQueryString( $queryString ) {$/;"	f
setQueryString	.\library\input.class.php	/^	} \/\/ end function setQueryString$/;"	f
setReporting	.\library\shared.php	/^function setReporting() {$/;"	f
setReturnClass	.\library\dbhelper.class.php	/^	function setReturnClass( $returnClassName ) {$/;"	f
setReturnClass	.\library\dbhelper.class.php	/^	} \/\/ end function setReturnClass$/;"	f
setSegments	.\library\urihelper.class.php	/^	static function setSegments( $segments ) {$/;"	f
setSegments	.\library\urihelper.class.php	/^	} \/\/ end function setSegments$/;"	f
setTableName	.\library\model.class.php	/^	function setTableName( $tableName ) {$/;"	f
setTableName	.\library\model.class.php	/^	} \/\/ end function setTableName$/;"	f
setTripleDesKey	.\library\crypthelper.class.php	/^	function setTripleDesKey ( $key ) {$/;"	f
setTripleDesVector	.\library\crypthelper.class.php	/^	function setTripleDesVector ( $vector ) {$/;"	f
showDebug	.\library\logger.class.php	/^	static function showDebug() {$/;"	f
showDebugSql	.\library\logger.class.php	/^	static function showDebugSql() {$/;"	f
showMessage	.\library\controller.class.php	/^    	$this->showMessage = $bool;$/;"	v
showMessage	.\library\controller.class.php	/^    private $showMessage = false;$/;"	v
simple	.\rs.php	/^	$simple = file_get_contents($arg3);$/;"	v
sound	.\library\gmcpusher.class.php	/^		$sound = 1$/;"	v
specialCharsToHTML	.\library\stringhelper.class.php	/^	static function specialCharsToHTML( $string ) {$/;"	f
sql	.\library\dbhelper.class.php	/^				$sql = "SELECT  kcu.column_name$/;"	v
sql	.\library\dbhelper.class.php	/^				$sql = "SELECT column_name as property$/;"	v
sql	.\library\dbhelper.class.php	/^				$sql = "SELECT$/;"	v
sql	.\library\dbhelper.class.php	/^			$sql = "SELECT COUNT(*) FROM $tableName WHERE ";$/;"	v
sql	.\library\dbhelper.class.php	/^		$sql = "";$/;"	v
sql	.\library\dbhelper.class.php	/^		$sql = "DELETE FROM $tableName WHERE ";$/;"	v
sql	.\library\dbhelper.class.php	/^		$sql = "DELETE FROM $tableName;";$/;"	v
sql	.\library\dbhelper.class.php	/^		$sql = "INSERT INTO $tableName (";$/;"	v
sql	.\library\dbhelper.class.php	/^		$sql = "SELECT " . $this->selectStatement;$/;"	v
sql	.\library\dbhelper.class.php	/^		$sql = "SELECT ";$/;"	v
sql	.\library\dbhelper.class.php	/^		$sql = "SELECT * from $tableName $where";$/;"	v
sql	.\library\dbhelper.class.php	/^		$sql = "SELECT COUNT(*) ";$/;"	v
sql	.\library\dbhelper.class.php	/^		$sql = "SELECT MAX(" . $idColName . ") as max_id FROM " . $tableName;$/;"	v
sql	.\library\dbhelper.class.php	/^		$sql = "SELECT MAX($colName) ";$/;"	v
sql	.\library\dbhelper.class.php	/^		$sql = "UPDATE $tableName SET ";$/;"	v
sql	.\rs.php	/^			$sql = "SELECT 'public $' || column_name || ';' AS property$/;"	v
sql	.\rs.php	/^			$sql = "SELECT$/;"	v
sql	.\rs.php	/^			$sql = $insertSql;$/;"	v
sql	.\rs.php	/^			$sql = $updateSql;$/;"	v
sql	.\rs.php	/^		$sql = "SELECT COUNT(*) FROM geofences WHERE business_id = :businessId AND name = :geofenceName";$/;"	v
sql	.\rs.php	/^		$sql = str_replace("@businessId", $businessId, $sql);$/;"	v
sql	.\rs.php	/^		$sql = str_replace("@coordinates", $geofence['coordinates'], $sql);$/;"	v
sql	.\rs.php	/^		$sql = str_replace("@geofenceName", $geofence['name'], $sql);$/;"	v
sql	.\rs.php	/^	$sql = "";$/;"	v
sql	.\rs.php	/^	$sql = 'SELECT \\'$this->\\' || column_name || \\' = $result[\\'\\'\\' || column_name || \\'\\'\\'];\\' AS property$/;"	v
sql	.\rs.php	/^	$sql = 'SELECT \\'\\'\\'\\' || column_name || \\'\\'\\' => $this->\\' || column_name || \\',\\' AS property$/;"	v
startAt	.\library\dbhelper.class.php	/^	function top($limit, $startAt = null) {$/;"	v
startAt	.\library\model.class.php	/^	static function top($limit, $startAt = null) {$/;"	v
startsWith	.\library\stringhelper.class.php	/^	static function startsWith($haystack, $needle) {$/;"	f
statement	.\library\dbhelper.class.php	/^			$statement = $this->conn->prepare($sql);$/;"	v
statement	.\library\dbhelper.class.php	/^		$statement = $this->conn->prepare($sql);$/;"	v
statement	.\library\dbhelper.class.php	/^		$statement = $this->conn->prepare($sql, array(PDO::ATTR_CURSOR => PDO::CURSOR_FWDONLY));$/;"	v
statusCode	.\library\urihelper.class.php	/^	static function redirect($url, $statusCode = 303)$/;"	v
str	.\library\crypthelper.class.php	/^			$str = call_user_func_array("pack", array_merge(array("C*"), $cachos3));$/;"	v
str	.\library\session.class.php	/^		$str = json_encode(self::$data);$/;"	v
str	.\library\stringhelper.class.php	/^		$str = "";$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace("�", "A", $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace("�", "E", $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace("�", "I", $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace("�", "N", $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace("�", "O", $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace("�", "U", $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace("�", "a", $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace("�", "e", $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace("�", "i", $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace("�", "n", $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace("�", "o", $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace("�", "u", $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = str_replace($search, $replace, $string);$/;"	v
string	.\library\stringhelper.class.php	/^		$string = strtoupper( $string );$/;"	v
stripAccents	.\library\stringhelper.class.php	/^	static function stripAccents($string){$/;"	f
stripSlashesDeep	.\library\shared.php	/^function stripSlashesDeep($value) {$/;"	f
subProperties	.\library\view.class.php	/^								$subProperties = get_object_vars( $properties[$key] );$/;"	v
subject	.\library\mailer.class.php	/^	static $subject;$/;"	v
submit	.\library\htmlhelper.class.php	/^		$submit = "<button type=\\"submit\\" id=\\"$name\\" name=\\"$name\\" class=\\"$cssClass\\">$value<\/button>";$/;"	v
subnode	.\library\xmlhelper.class.php	/^      $subnode = $xml_data->addChild($key);$/;"	v
table	.\library\htmlhelper.class.php	/^		$table = '<table id="' . $tableId . '" ' . $attributes .'>';$/;"	v
tableId	.\library\htmlhelper.class.php	/^				$tableId = $options['id'];$/;"	v
tableId	.\library\htmlhelper.class.php	/^			$tableId = 'table' . rand(11,99);$/;"	v
tableName	.\library\dbhelper.class.php	/^	function max($colName, $tableName = NULL) {$/;"	v
tableName	.\library\model.class.php	/^		$this->tableName = $tableName;$/;"	v
tableName	.\library\model.class.php	/^	protected $tableName;$/;"	v
tableName	.\library\model.class.php	/^	static function tableName() {$/;"	f
tableName	.\rs.php	/^	$tableName = $arg4;$/;"	v
tableName	.\rs.php	/^	$tableName = strtolower($arg3);$/;"	v
target	.\library\htmlhelper.class.php	/^	static function anchor($url, $text, $target = "_self", $options = '') {$/;"	v
tbody	.\library\htmlhelper.class.php	/^		$tbody = '<tbody>';$/;"	v
template	.\library\htmlhelper.class.php	/^							$template = '<textarea class="form-control" id="@name" name="@name" value="@value" required @attributes><\/textarea>';$/;"	v
template	.\library\htmlhelper.class.php	/^						$template = self::formSelect($/;"	v
template	.\library\htmlhelper.class.php	/^					$template = '<input class="form-control" id="@name" name="@name" type="date" required @attributes \/>';$/;"	v
template	.\library\htmlhelper.class.php	/^					$template = '<input class="form-control" id="@name" name="@name" type="text" value="@value" required @attributes \/>';$/;"	v
template	.\library\htmlhelper.class.php	/^					$template = '<input id="@name" name="@name" type="hidden" value="@value" \/>';$/;"	v
template	.\library\htmlhelper.class.php	/^					$template = str_replace("@attributes", $attributes, $template);$/;"	v
template	.\library\htmlhelper.class.php	/^					$template = str_replace("@name", $input['name'], $template);$/;"	v
template	.\library\htmlhelper.class.php	/^					$template = str_replace("@value", $val, $template);$/;"	v
template	.\library\htmlhelper.class.php	/^			$template = '<div class="checkbox"><label><input type="checkbox" name="@name[]" value="@value" @checked>@display<\/label><\/div>';$/;"	v
template	.\library\htmlhelper.class.php	/^			$template = str_replace("@checked", $checked, $template);$/;"	v
template	.\library\htmlhelper.class.php	/^			$template = str_replace("@display", $input[$displayField], $template);$/;"	v
template	.\library\htmlhelper.class.php	/^			$template = str_replace("@name", $controlName, $template);$/;"	v
template	.\library\htmlhelper.class.php	/^			$template = str_replace("@value", $input[$valueField], $template);$/;"	v
template	.\library\view.class.php	/^						$template =$/;"	v
template	.\library\view.class.php	/^					$template = str_replace($itemKey, $data[$itemKey], $template);$/;"	v
template	.\library\view.class.php	/^		$template = str_replace('$baseUrl', BASE_URL, $template);$/;"	v
text	.\library\htmlhelper.class.php	/^									$text = $column['text'];$/;"	v
text	.\library\htmlhelper.class.php	/^									$text = $row[$column["name"]];$/;"	v
text	.\library\logger.class.php	/^				$text = print_r($text, true);$/;"	v
text	.\library\logger.class.php	/^			$text = date('Y-m-d H:i:s') . '		' . $text . '$/;"	v
text	.\rs.php	/^	$text = $classDefinition;$/;"	v
text	.\rs.php	/^	$text = str_replace("@id", strtolower($id), $text);$/;"	v
text	.\rs.php	/^	$text = str_replace("@loadProperties", $loadProperties, $text);$/;"	v
text	.\rs.php	/^	$text = str_replace("@publicProperties", $publicProperties, $text);$/;"	v
text	.\rs.php	/^	$text = str_replace("@saveProperties", $saveProperties, $text);$/;"	v
text	.\rs.php	/^	$text = str_replace("@tableName", ucfirst($tableName), $text);$/;"	v
thead	.\library\htmlhelper.class.php	/^		$thead = '<thead><tr>';$/;"	v
time1	.\library\datehelper.class.php	/^				$time1 = $date1->getTimestamp();$/;"	v
time1	.\library\datehelper.class.php	/^		$time1 = null;$/;"	v
time2	.\library\datehelper.class.php	/^				$time2 = $date2->getTimestamp();$/;"	v
time2	.\library\datehelper.class.php	/^		$time2 =  null;$/;"	v
tmp	.\library\stringhelper.class.php	/^		$tmp = array_chunk($/;"	v
to	.\library\dbhelper.class.php	/^	 * @param string $className (optional) The name of the class to return$/;"	c
to	.\library\dbhelper.class.php	/^	 * Set the class to return$/;"	c
to	.\library\dbhelper.class.php	/^	 * This is the name of the class to return, if any$/;"	c
to	.\library\mailer.class.php	/^	static $to;$/;"	v
toUpper	.\library\stringhelper.class.php	/^	static function toUpper( $string ) {$/;"	f
top	.\library\dbhelper.class.php	/^	function top($limit, $startAt = null) {$/;"	f
top	.\library\model.class.php	/^	static function top($limit, $startAt = null) {$/;"	f
top	.\library\model.class.php	/^	} \/\/ end static function top$/;"	f
tripleDesDecrypt	.\library\crypthelper.class.php	/^	function tripleDesDecrypt($buffer) {$/;"	f
tripleDesEncrypt	.\library\crypthelper.class.php	/^	function tripleDesEncrypt($buffer) {$/;"	f
tripleDesKey	.\library\crypthelper.class.php	/^			$this->tripleDesKey = TRIPLEDES_KEY;$/;"	v
tripleDesKey	.\library\crypthelper.class.php	/^		$this->tripleDesKey = hex2bin( $key );$/;"	v
tripleDesKey	.\library\crypthelper.class.php	/^		if ( $this->tripleDesKey == '' ) {$/;"	v
tripleDesKey	.\library\crypthelper.class.php	/^	protected $tripleDesKey = '';$/;"	v
tripleDesVector	.\library\crypthelper.class.php	/^			$this->tripleDesVector = TRIPLEDES_IV;$/;"	v
tripleDesVector	.\library\crypthelper.class.php	/^		$this->tripleDesVector = hex2bin( $vector );$/;"	v
tripleDesVector	.\library\crypthelper.class.php	/^		if ( $this->tripleDesVector == '' ) {$/;"	v
tripleDesVector	.\library\crypthelper.class.php	/^	protected $tripleDesVector = '';$/;"	v
truncate	.\library\dbhelper.class.php	/^	function truncate($tableName) {$/;"	f
type	.\config\app.json	/^					"type": "session"$/;"	f
type	.\library\htmlhelper.class.php	/^										$type = 'hidden';$/;"	v
type	.\library\htmlhelper.class.php	/^								$type = 'text';$/;"	v
typeOf	.\library\datehelper.class.php	/^		$typeOf = getType( $date1 );$/;"	v
typeOf	.\library\datehelper.class.php	/^		$typeOf = getType( $date2 );$/;"	v
typeOf	.\library\datehelper.class.php	/^		if ( $typeOf == 'object' ) {$/;"	v
typeOf	.\library\datehelper.class.php	/^		} else if ( $typeOf == 'string' ) {$/;"	v
unregisterGlobals	.\library\shared.php	/^function unregisterGlobals() {$/;"	f
update	.\library\dbhelper.class.php	/^	function update( $tableName, $params, $where) {$/;"	f
updateSql	.\rs.php	/^	$updateSql = 'UPDATE ' . $tableName . ' SET coordinates = st_geomfromtext(\\'POLYGON((@coordinates))\\')::polygon WHERE business_id = @businessId AND name = \\'@geofenceName\\';';$/;"	v
upsert	.\library\dbhelper.class.php	/^	function upsert($tableName, $params, $where) {$/;"	f
url	.\config\app.json	/^			"url": "",$/;"	f
url	.\config\app.json	/^			"url": "politicadeprivacidad",$/;"	f
url	.\library\gmcpusher.class.php	/^		$url = 'https:\/\/android.googleapis.com\/gcm\/send';$/;"	v
url	.\library\shared.php	/^			$url = $urlParts[0];$/;"	v
url	.\library\shared.php	/^	 			$url = str_replace($route->_uri, $route->_newUri, $url);$/;"	v
url	.\library\shared.php	/^ 	if ( $url == "" || $url == "\/") {$/;"	v
url	.\public\index.php	/^$url = str_replace($directory . '\/', '', $_SERVER['REQUEST_URI']);$/;"	v
urlArray	.\library\shared.php	/^ 		$urlArray = explode("\/",$url);$/;"	v
urlParts	.\library\shared.php	/^		$urlParts = explode('?', $url);$/;"	v
urlSegments	.\library\route.class.php	/^			$urlSegments = array_filter( $urlSegments );$/;"	v
urlSegments	.\library\route.class.php	/^			$urlSegments = explode( "\/", $url );$/;"	v
url_back	.\library\htmlhelper.class.php	/^	static function errorMsg($error_msg, $url_back = '') {$/;"	v
url_fields_row	.\library\htmlhelper.class.php	/^				$url_fields_row = $options['url_fields'];$/;"	v
url_format	.\library\htmlhelper.class.php	/^											$url_format = str_replace( "@$field", $row[$field], $url_format);$/;"	v
url_format	.\library\htmlhelper.class.php	/^									$url_format = $column['url_format'];$/;"	v
url_format	.\library\htmlhelper.class.php	/^								$url_format = "#";$/;"	v
url_format_row	.\library\htmlhelper.class.php	/^				$url_format_row = $options['url_format'];$/;"	v
url_row	.\library\htmlhelper.class.php	/^							$url_row = str_replace( "@$field", $row[$field], $url_row);$/;"	v
url_row	.\library\htmlhelper.class.php	/^					$url_row = $url_format_row;$/;"	v
useRouting	.\public\js\app\config.json	/^    "useRouting": true,$/;"	f
userName	.\config\app.json	/^			"userName": "luis",$/;"	f
userName	.\library\dbconnection.class.php	/^		$this->userName = $options['userName'];$/;"	v
userName	.\library\dbconnection.class.php	/^	public $userName;$/;"	v
userName	.\library\dbhelper.class.php	/^			$userName = $this->dbConn->userName;$/;"	v
uuid	.\library\stringhelper.class.php	/^			$uuid = ""$/;"	v
val	.\library\htmlhelper.class.php	/^									$val = $param["value"];$/;"	v
val	.\library\htmlhelper.class.php	/^									$val = Session::get($param["sessionParameter"]);$/;"	v
val	.\library\htmlhelper.class.php	/^								$val = Session::get( $input['defaultParameter'] );$/;"	v
val	.\library\htmlhelper.class.php	/^								$val = Session::get( $input['name'] );$/;"	v
val	.\library\htmlhelper.class.php	/^					$val = '';$/;"	v
val	.\library\session.class.php	/^		$val = $crypt->tripleDesEncrypt($/;"	v
validBool	.\library\validation.class.php	/^	function validBool($value) {$/;"	f
validEmail	.\library\validation.class.php	/^	function validEmail($value) {$/;"	f
validFloat	.\library\validation.class.php	/^	function validFloat($value) {$/;"	f
validIP	.\library\validation.class.php	/^	function validIP($value) {$/;"	f
validInt	.\library\validation.class.php	/^	function validInt($value) {$/;"	f
validMAC	.\library\validation.class.php	/^	function validMAC($value) {$/;"	f
validMax	.\library\validation.class.php	/^	function validMax($value, $max) {$/;"	f
validMaxLength	.\library\validation.class.php	/^	function validMaxLength($value, $max) {$/;"	f
validMin	.\library\validation.class.php	/^	function validMin($value, $min) {$/;"	f
validMinLength	.\library\validation.class.php	/^	function validMinLength($value, $min) {$/;"	f
validRegExp	.\library\validation.class.php	/^	function validRegExp($value) {$/;"	f
validRequired	.\library\validation.class.php	/^	function validRequired($value) {$/;"	f
validUrl	.\library\validation.class.php	/^	function validUrl($value) {$/;"	f
validate	.\library\session.class.php	/^	static function validate( $controllerName ) {$/;"	f
validate	.\library\validation.class.php	/^	function validate($values) {$/;"	f
validateSession	.\config\app.json	/^		"validateSession": "off",$/;"	f
validateSession	.\library\session.class.php	/^	} \/\/ end function validateSession$/;"	f
value	.\config\app.json	/^					"value": "myValue",$/;"	f
value	.\config\app.php	/^	public static function set($name, $value = null) {$/;"	v
value	.\library\dbhelper.class.php	/^		if ( $value == NULL && is_array($columnName) ) {$/;"	v
value	.\library\dbhelper.class.php	/^		if ( $value == null && $columnName ) {$/;"	v
value	.\library\dbhelper.class.php	/^	function andWhere($columnName, $value = NULL) {$/;"	v
value	.\library\dbhelper.class.php	/^	function where($columnName, $value = NULL) {$/;"	v
value	.\library\htmlhelper.class.php	/^		$value = null$/;"	v
value	.\library\model.class.php	/^	static function where($columnName, $value = NULL) {$/;"	v
value	.\library\shared.php	/^    $value = is_array($value) ? array_map('stripSlashesDeep', $value) : stripslashes($value);$/;"	v
value	.\library\view.class.php	/^                $value = self::convertToObject($value);$/;"	v
value	.\library\xmlhelper.class.php	/^      $value = (array) $value;$/;"	v
values	.\library\validation.class.php	/^	protected $values;$/;"	v
var.fn	.\public\js\realsimple.js	/^        var fn = function ( value, key, obj ) {$/;"	f
variables	.\config\app.php	/^	protected static $variables;$/;"	v
vars	.\library\htmlhelper.class.php	/^				$vars = explode('__', $key);$/;"	v
vars	.\library\view.class.php	/^	protected static $vars;$/;"	v
vibrate	.\library\gmcpusher.class.php	/^		$vibrate = 1,$/;"	v
view	.\library\view.class.php	/^									$view =$/;"	v
view	.\library\view.class.php	/^								$view =$/;"	v
view	.\library\view.class.php	/^						$view = str_replace($itemKey, $data[$itemKey], $view);$/;"	v
view	.\library\view.class.php	/^			$view = StringHelper::specialCharsToHTML( $view );$/;"	v
view	.\library\view.class.php	/^			$view = self::requireToVar($filePath);$/;"	v
view	.\library\view.class.php	/^			$view = str_replace( '$appName', APP_NAME, $view );$/;"	v
view	.\library\view.class.php	/^			$view = str_replace( '$baseUrl', BASE_URL, $view );$/;"	v
view	.\library\view.class.php	/^} \/\/ end class view$/;"	c
visible	.\library\htmlhelper.class.php	/^								$visible = ' style="display: none;" ';$/;"	v
visible	.\library\htmlhelper.class.php	/^							$visible = ' style="display: none;" ';$/;"	v
visible	.\library\htmlhelper.class.php	/^						$visible = '';$/;"	v
visible	.\library\htmlhelper.class.php	/^					$visible = '';$/;"	v
where	.\library\dbhelper.class.php	/^				if ( $where == "") {$/;"	v
where	.\library\dbhelper.class.php	/^		$where = "";$/;"	v
where	.\library\dbhelper.class.php	/^	function where($columnName, $value = NULL) {$/;"	f
where	.\library\model.class.php	/^	static function where($columnName, $value = NULL) {$/;"	f
where	.\library\model.class.php	/^	} \/\/ end static function where$/;"	f
where	.\rs.php	/^		$where = array($/;"	v
whereParams	.\library\dbhelper.class.php	/^		$this->whereParams = null;$/;"	v
whereParams	.\library\dbhelper.class.php	/^	protected $whereParams;$/;"	v
whereStatement	.\library\dbhelper.class.php	/^						$this->whereStatement = "$colName = :$paramName";$/;"	v
whereStatement	.\library\dbhelper.class.php	/^				$this->whereStatement = " $columnName ";$/;"	v
whereStatement	.\library\dbhelper.class.php	/^				$this->whereStatement = "$columnName = :$paramName";$/;"	v
whereStatement	.\library\dbhelper.class.php	/^			$this->whereStatement = "$columnName LIKE :$paramName";$/;"	v
whereStatement	.\library\dbhelper.class.php	/^			$this->whereStatement = "UPPER($columnName) LIKE :$paramName";$/;"	v
whereStatement	.\library\dbhelper.class.php	/^		$this->whereStatement = null;$/;"	v
whereStatement	.\library\dbhelper.class.php	/^	protected $whereStatement;$/;"	v
whereStatems.php	/^	function count($tableName = NULL) {$/;"	f
will	.\library\shared.php	/^ * This function will process our calls$/;"	f
xmlResponse	.\library\xmlhelper.class.php	/^  static function xmlResponse( $data ) {$/;"	f
xml_data	.\library\xmlhelper.class.php	/^    $xml_data = new SimpleXMLElement('<?xml version="1.0"?><data><\/data>');$/;"	v
